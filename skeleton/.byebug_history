exit
options.model_class.find(self.send()
options.model_class.find(1)
options.model_class.find(foreign_id)
options.model_class
source_options
source
self.id
primary_id
source_options.foreign_key
source_options
c
q
source_options
options
self
source_options
c
assoc_options
n
assoc_options
c
s
q
@hash
@hash[name]
name
c
res
c
res
c
res
q
options.model_class
options
Cat.where(id:1)
cat.where(id:1)
Cat.where
self
options
name
options
q
self
q
options.model_class.find(1)
options.table_name
options.model_class
options
options.foreign_key
ptions.foreign_key
self.send(:owner_id)
self.send(:ownder_id)
self.owner_id
self.:owner_id
self
options.foreign_key
options.primary_key
options
self
name
q
eq
self.find(1)
options.model_class
self.find(1)
self.send(find,1)
self.send(find)
self.send(find){|V| 1}
self.send(find,1 )
self.send(find,1)
self.class
self
options
q
BelongsToOptions(:human)
BelongsToOptions
c
res
table_name
self
where_line
c
q
parse_all(res)
parse_all(res_)
res
q
c
where_line
self
slef
table_name
q
params
where_line
values
display v
v
q
c
s
key
c
key
q
t
n
c
t
n
q
s
t
c
s
t
s
t
q
Human.fname
Human.methods
Human.new
Human
self.class.instance_methods(false)
self.class.instance_methods
self.class
self.instance_methods(false)
self.instance_methods
self
self.fname
self.id
key
c
key
q
DBConnection.last_insert_row_id
res
s
res
c
q
y
x
x,y = attributes
*attributes
attributes
res
<<-SQL SQL
<<-SQL,  SQL
<<-SQL SQL
<<-SQL
      LIMIT 1
      VALUES (#{question_marks})
      INSERT INTO (#{col_names})
<<-SQL, *attributes)
q
attributes
col_names
question_marks
q
exit
col_names
q
col_names[
col_names
c
s
key
s
key
q
self.class.columns.include?("id")
self.class.columns
self.id
self
params
q
exit
res
exit
self.new(name: "tam")
self.new
self
q
exit
self.send("name=","sda")
self.send(":name=","sda")
self.send(:name,"sd")
self.send(:name)
self.name
self.name = "ta"
self.name
self.methods
self
slef
self.
self.instance_method(false)
self.instance_methods(false)
self.id
self.id= 1
self.id
self.name
self.class.id
self.class.name
self.class.name)
self.class.send(:id)
params
params)
self.class.send(:name)
self.class
val
key
exit
res[0]
res[0].keys
res
